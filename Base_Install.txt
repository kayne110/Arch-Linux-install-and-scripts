#Step by step on my personal install

#Checking boot mode, looking for 64 on command return.
 cat /sys/firmware/efi/fw-platform_size   

#internet connection
 Ping google.com #check for internet connection

#setting the time
 timedatectl # after connecting to internet see if it is correct straight away.
 #timedatectl set-ntp true
 #timedatectl status #confirm time and date is correct

#create the paritions
 fdisk -l #list all disks available to make sure they are all their.
 cfdisk #create all your paritions and disks.

###Example layouts
#UEFI with GPT Mount point on the installed system 	
#Partition 	             Partition                  type 	                  Suggested size
#/boot1 	              /dev/efi_system_partition 	 EFI system partition 	    1 GiB
#[SWAP] 	              /dev/swap_partition 	       Linux swap 	              At least 4 GiB
#/ 	                   /dev/root_partition 	       Linux x86-64 root (/) 	   Remainder of the device. At least 23â€“32 GiB. 

#time to make the file system
 mkfs.fat -F32 /dev/(drive) #used for the efi parition
 mkswap /dev/(drive) #used for the swap partiiton
 mkfs.ext4 /dev/(drive) #used for the bulk storage partition
 
#Base install 
 mount /dev/(EXT4 partition) /mnt
 mount --mkdir /dev/(EFI parition) /mnt/boot
 swapon /dev/(drive) #actives the swap

 pacstrap -k /mnt base linux linux-firmware nano sudo

 genfstab -U /mnt >> /mnt/etc/fstab
 
 arch-chroot /mnt
 ln -sf /usr/share/zoneinfo/Country/City /etc/localtime
 hwclock --systohc

#edit locale-gen file if needed to your correct locale
 locale-gen
 nano /etc/locale.gen
 #Uncomment lines 
 # en_US.UTF-8
 # UTF-8
 locale-gen

#Edit host names and host
 nano /etc/hostname
 #arch (hostname)

 nano /etc/hosts
 # 127.0.0.1 localhost
 # ::1 localhost
 # 127.0.1.1 arch(hostname).localdomain arch(hostname)

#adding users and passwords
 passwd #sets the user password
 useradd -m (username) #set up a new user
 passwd (username) # sets user password
 usermod -aG wheel,audio,video,optical, storage (username) #add them to groups and give them pemissions
 EDITOR=nano visudo
 #uncommented out the line %wheel ALL = (ALL) ALL

#sorting out grub
 pacman -S grub efibootmgr dosfstool os-prober mtools
 grub-install --target=x86_64-efi --bootloader-id=grub_uefi --recheck
#if above doesn't work try grub-install --target=x86_64-efi --efi-directory=/mnt/boot --bootloader-id=GRUB
 grub-mkconfig -o /boot/grub/grub.cfg


 pacman -S networkmanager
 systemctl enable NetworkManager

#Enable multilib
 nano /etc/pacman.cof
#uncomment these lines
 #[multilib]
 #Include = /etc/pacman.d/mirrorlist

#edit mirrorlist
nano /etc/pacman.d/mirrorlist
#Only leave close mirrors

#Final Setup of Applications
pacman -Syu nvidia base-devel git firefox vim elinks vi wayland

#install YAY
 cd ~/Downloads
 git clone https://aur.archlinux.org/yay.git
 cd  yay
 makepkg -si

#installing hyperland
 yay -S ninja gcc cmake meson libxcb xcb-proto xcb-util xcb-util-keysyms libxfixes libx11 libxcomposite libxrender libxcursor pixman wayland-protocols cairo pango libxkbcommon xcb-util-wm xorg-xwayland libinput libliftoff libdisplay-info cpio tomlplusplus hyprlang-git hyprcursor-git hyprwayland-scanner-git xcb-util-errors hyprutils-git glaze hyprgraphics-git aquamarine-git re2 hyprland-qtutils
 git clone --recursive https://github.com/hyprwm/Hyprland
 cd Hyprland
 make all && sudo make install


#on Reboot create a script directory
mkdir -m 0755 /root/.myscripts

exit
umount -R /mnt #if not busy partitions then reboot if their is then using fuser
reboot

###
###Jobs done Arch is intalled
###
